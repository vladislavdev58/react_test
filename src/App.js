import React from 'react';
import Posts from "./components/Posts";
// import Button from "./components/Button";
import Favorites from "./components/Favorites";
import './App.css'


class App extends React.Component {

    // –ù–∞–¥ –≤–µ—Ä—Å—Ç–∫–æ–π –Ω–µ –∑–∞–º–æ—Ä–∞—á–∏–≤–∞–ª—Å—è –≤–æ–æ–±—â–µ, –¥—É–º–∞—é —Ç—É—Ç —ç—Ç–æ –Ω–µ —Ç–∞–∫ –≤–∞–∂–Ω–æ
    // –í—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ –º–æ–∂–Ω–æ —Ä–∞—Å–∫–∏–¥–∞—Ç—å –Ω–∞ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, –ø—Ä–∏—á–µ—Å–∞—Ç—å –∫–æ–¥ –∏ –≤—Å–µ —Ç–∞–∫–æ–µ, –Ω–æ —è —É–∂–µ –Ω–µ –º–æ–≥—É(–ø–æ—Å–ª–µ —Ä–∞–±–æ—Ç—ã, –¥–µ–ª–∞—é —ç—Ç–æ)
    // –ó–Ω–∞—é, —á—Ç–æ –±—Ä–∞—Ç—å –¥–∞–Ω–Ω—ã–µ —Å DOM –∫–∞–∫ —è –¥–µ–ª–∞—é –≤ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ –Ω–µ —Ö–æ—Ä–æ—à–æ, –Ω–æ —è —Å–¥–µ–ª–∞–ª —Ç–∞–∫
    // –¢–∞–∫ –∂–µ –Ω–µ—Ç –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤—Å–µ —á—Ç–æ —Å–≤—è–∑–∞–Ω–æ–µ —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º, –∫—Ä–æ–º–µ –Ω–∞ –ø–æ—Ç–≤–æ—Ä–Ω–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ. –õ–∏—à–Ω–∏–π —Å–∏–º–≤–æ–ª –∏... üî•
    // –ö–æ–¥ –ø–∏—Å–∞–ª—Å—è –±–µ–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ –∏ –≤—Å–µ —Ç–∞–∫–æ–µ, –∏–±–æ –±—ã—Å—Ç—Ä–µ–µ-–±—ã—Å—Ç—Ä–µ–µ, –≥–æ—Ç–æ–≤ –æ–±—ä—è—Å–Ω–∏—Ç—å –Ω–∞ —Å–æ–∑–≤–æ–Ω–µ.
    // –ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á—Ç–∏—Ç–µ —á—Ç–æ —ç—Ç–æ –ø–µ—Ä–≤—ã–π —Ä–∞–∑ –∫–æ–≥–¥–∞ —è –¥–µ–ª–∞–ª —á—Ç–æ-—Ç–æ –Ω–∞ —Ä–µ–∫–∞—Ç–µ. –Ø –Ω–∏ —Å–º–æ—Ç—Ä–µ–ª –Ω–∏ –æ–¥–Ω–æ–≥–æ –∫—É—Ä—Å–∞(–Ω–µ —Å—á–∏—Ç–∞—è —á–∞—Å–∞, –ø–æ—Å–ª–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏—è)
    // –ü—Ä–æ —Ö—É–∫–∏ —É–∑–Ω–∞–ª 7 —á–∏—Å–ª–∞ –≤ 12 –Ω–æ—á–∏. –ü–µ—Ä–µ–¥–µ–ª—ã–≤–∞—Ç—å —É–∂–µ –Ω–µ—Ç –∂–µ–ª–∞–Ω–∏—è.
    // –¢–∞–∫ –∂–µ –Ω–µ –≤–µ–∑–¥–µ –µ—Å—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫–∏. –¢–∞–º –≥–¥–µ –≥–∞–ª–µ—Ä–µ—è –æ–Ω–∏ –ø–æ –¥—Ä—É–≥–æ–º—É –ª–µ–∂–∞—Ç. –•–æ—Ç–µ–ª –¥–æ—Å—Ç–∞—Ç—å —Ö–æ—Ç—è-–±—ã –æ–¥–Ω—É, –Ω–æ —É–≤—ã.
    // –í–æ–æ–±—â–µ–º –Ω–µ —Å—É–¥–∏—Ç–µ —Å—Ç—Ä–æ–≥–æ
    // üíä - —Ç–∞–±–ª–µ—Ç–æ—á–∫–∞ —É—Å–ø–æ–∫–æ–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø–µ—Ä–µ–¥ –ø—Ä–æ–≤–µ—Ä–∫–æ–π üòÇ

    constructor(props) {
        super(props);
        this.state = {
            posts: {
                error: null,
                isLoaded: false,
                items: [],
            },
            favorite:{
                favoriteList: []
            }

        };
        this.limitAPI = 10;
        this.lastPostsName = null;
    }

    loadingAPI = (afterId) => {
        fetch(`https://www.reddit.com/r/cats.json?limit=${this.limitAPI}&after=${afterId}`)
            .then(res => res.json())
            .then(
                (result) => {
                    this.setState({posts:{
                        isLoaded: true,
                        items: this.state.posts.items.concat(result.data.children)
                    }});

                    this.lastPostsName = this.state.posts.items[this.state.posts.items.length - 1].data.name;
                },
                // –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –≤–∞–∂–Ω–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –æ—à–∏–±–∫–∏ –∏–º–µ–Ω–Ω–æ –∑–¥–µ—Å—å, –∞ –Ω–µ –≤ –±–ª–æ–∫–µ catch(),
                // —á—Ç–æ–±—ã –Ω–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –æ—à–∏–±–æ–∫ –≤ —Å–∞–º–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö.
                (error) => {
                    this.setState({
                        isLoaded: true,
                        error
                    });
                }
            )
    }

    endlessScroll = () =>{
        window.addEventListener('scroll', () => {

            var block = document.getElementById('posts');

            var contentHeight = block.offsetHeight;      // 1) –≤—ã—Å–æ—Ç–∞ –±–ª–æ–∫–∞ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ –≤–º–µ—Å—Ç–µ —Å –≥—Ä–∞–Ω–∏—Ü–∞–º–∏
            var yOffset       = window.pageYOffset;      // 2) —Ç–µ–∫—É—â–µ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ —Å–∫—Ä–æ–ª–±–∞—Ä–∞
            var window_height = window.innerHeight;      // 3) –≤—ã—Å–æ—Ç–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –æ–±–ª–∞—Å—Ç–∏ –æ–∫–Ω–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            var y             = yOffset + window_height;

            // –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ—Å—Ç–∏–≥ –∫–æ–Ω—Ü–∞
            if(y >= contentHeight)
            {
                this.loadingAPI(this.lastPostsName);
                //–∑–∞–≥—Ä—É–∂–∞–µ–º –Ω–æ–≤–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –≤ —ç–ª–µ–º–µ–Ω—Ç
            }
        });

    }

    checkLocalFavorite = () => {
        if (localStorage.getItem('favorites') !== null) {
            var favoriteList = JSON.parse(localStorage.getItem('favorites'));
            this.setState({favorite:{
                    favoriteList:  favoriteList
                }});
        }
    }

    addFavotire = (event) => {
        const id = event.target.value;
        const found = this.state.favorite.favoriteList.some(function (el) {
            return el.id === id;
        });

        if (!found) {
            const url = document.querySelector('[data-id="' + id + '"] a').href;
            const title = document.querySelector('[data-id="' + id + '"] .card-title').textContent;
            var img = 'https://pbs.twimg.com/profile_images/927927700483960832/DFUqo-xB.jpg';
            if (document.querySelector('[data-id="' + id + '"] img')) {
                img = document.querySelector('[data-id="' + id + '"] img').getAttribute('src');
            }
            const arrFavorite = [{id, url, title, img}];

            this.setState({
                favorite: {
                    favoriteList: this.state.favorite.favoriteList.concat(arrFavorite)
                }
            }, () => {
                localStorage.setItem('favorites', JSON.stringify(this.state.favorite.favoriteList));
                alert('–î–æ–±–∞–≤–ª–µ–Ω–æ ‚úî');
            });
        }
        else{
            alert('–£–∂–µ –µ—Å—Ç—å üòâ');
        }
    }

    removeFavotire = (event) => {
        const id = event.target.value;
        this.setState({favorite:{
                favoriteList: this.state.favorite.favoriteList.filter(item => item.id !== id)
            }},() => {
            localStorage.setItem('favorites', JSON.stringify(this.state.favorite.favoriteList));
        });
    }

    componentDidMount() {
        this.loadingAPI(this.lastPostsName);
        this.checkLocalFavorite();
        this.endlessScroll();
    }

    render() {
        return (
            <div className="App">
                <div className="container">
                    <div className="row align-items-start">
                        <div className="col-12 col-md-8" id="posts">
                            <Posts posts={this.state.posts} addFavotire={this.addFavotire} />
                        </div>
                        <div className="col-12 col-md-4 bg-dark">
                            <p className="display-6 text-light">–ò–∑–±—Ä–∞–Ω–Ω–æ–µ ‚ù§</p>
                            <Favorites favorite={this.state.favorite} removeFavotire={this.removeFavotire}/>
                        </div>
                    </div>
                </div>
            </div>

        )
    }
}
// https://prnt.sc/vyd7gl - —Ç—ã–∫
export default App;